@using Blazored.LocalStorage
@using FrontEnd.Services
@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject AuthService AuthService

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <!-- Displays log in or logout buttons dpeending on apps state -->
            @if (AuthService.IsLoggedIn)
            {
                <p>
                    @AuthService.UserEmail<span/>
                    <button @onclick="Logout" class="btn btn-secondary">Wyloguj się</button>
                </p>
            }
            else{
                <button @onclick="RedirectToLogin" class="btn btn-secondary">Zaloguj się</button>
            }
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    //// <summary>
    /// Initializes AuthService object and its event detection
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        await AuthService.InitializeAsync();
        AuthService.OnChange += StateHasChanged;
    }

    /// <summary>
    /// Logs out user and redirects him to homepage
    /// </summary>
    /// <returns></returns>
    private async Task Logout()
    {
        await AuthService.Logout();
        Navigation.NavigateTo("/");
    }

    /// <summary>
    /// Redirects usres to login form
    /// </summary>
    private void RedirectToLogin()
    {
        Navigation.NavigateTo("/login");
    }

    public void Dispose() => AuthService.OnChange -= StateHasChanged;
}
